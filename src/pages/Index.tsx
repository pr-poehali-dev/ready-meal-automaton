import { useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';

interface MenuItem {
  id: number;
  name: string;
  description: string;
  price: number;
  calories: number;
  image: string;
  category: string;
}

interface VendingMachine {
  id: number;
  address: string;
  hours: string;
  lat: number;
  lng: number;
}

const menuItems: MenuItem[] = [
  {
    id: 1,
    name: '–ü–∞—Å—Ç–∞ —Å —Ç–æ–º–∞—Ç–Ω—ã–º —Å–æ—É—Å–æ–º',
    description: '–î–æ–º–∞—à–Ω—è—è –ø–∞—Å—Ç–∞ —Å —Ç–æ–º–∞—Ç–Ω—ã–º —Å–æ—É—Å–æ–º –∏ —Å–≤–µ–∂–∏–º –±–∞–∑–∏–ª–∏–∫–æ–º',
    price: 350,
    calories: 450,
    image: 'https://cdn.poehali.dev/projects/c4a38814-a77b-4f47-9787-52149997cd6f/files/5023e006-4507-44e5-8b90-0d1f8cf63120.jpg',
    category: '–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞'
  },
  {
    id: 2,
    name: '–¢–µ—Ä–∏—è–∫–∏ —Å –∫—É—Ä–∏—Ü–µ–π',
    description: '–Ø–ø–æ–Ω—Å–∫–∏–π —Ç–µ—Ä–∏—è–∫–∏ —Å –∫—É—Ä–∏–Ω—ã–º —Ñ–∏–ª–µ –∏ –æ–≤–æ—â–∞–º–∏',
    price: 400,
    calories: 520,
    image: 'https://cdn.poehali.dev/projects/c4a38814-a77b-4f47-9787-52149997cd6f/files/27b231dc-85e9-434c-a451-9fed62f6e8ab.jpg',
    category: '–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞'
  },
  {
    id: 3,
    name: '–°–∞–ª–∞—Ç —Å –∫–∏–Ω–æ–∞',
    description: '–ü–æ–ª–µ–∑–Ω—ã–π —Å–∞–ª–∞—Ç —Å –∫–∏–Ω–æ–∞, —Å–≤–µ–∂–∏–º–∏ –æ–≤–æ—â–∞–º–∏ –∏ –∞–≤–æ–∫–∞–¥–æ',
    price: 320,
    calories: 280,
    image: 'https://cdn.poehali.dev/projects/c4a38814-a77b-4f47-9787-52149997cd6f/files/2e8f7211-72d2-49db-82f5-71eeb43bdd93.jpg',
    category: '–°–∞–ª–∞—Ç—ã'
  }
];

const vendingMachines: VendingMachine[] = [
  { id: 1, address: '—É–ª. –õ–µ–Ω–∏–Ω–∞, 45', hours: '24/7', lat: 55.751244, lng: 37.618423 },
  { id: 2, address: '–ø—Ä. –ú–∏—Ä–∞, 120', hours: '06:00-23:00', lat: 55.769217, lng: 37.639301 },
  { id: 3, address: '—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 15', hours: '24/7', lat: 55.764343, lng: 37.605011 }
];

const faqItems = [
  {
    question: '–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –µ–¥—É –∏–∑ –∞–≤—Ç–æ–º–∞—Ç–∞?',
    answer: '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, —É–∫–∞–∂–∏—Ç–µ –±–ª–∏–∂–∞–π—à–∏–π –∞–≤—Ç–æ–º–∞—Ç –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –æ–Ω–ª–∞–π–Ω. –ü–æ–ª—É—á–∏—Ç–µ –∫–æ–¥ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —è—á–µ–π–∫–∏ —Å –≤–∞—à–∏–º –∑–∞–∫–∞–∑–æ–º.'
  },
  {
    question: '–ï–¥–∞ —Å–≤–µ–∂–∞—è?',
    answer: '–î–∞! –ú—ã –≥–æ—Ç–æ–≤–∏–º –≤—Å–µ –±–ª—é–¥–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –Ω–∞ –¥–æ–º–∞—à–Ω–µ–π –∫—É—Ö–Ω–µ. –ë–ª—é–¥–∞ —Ö—Ä–∞–Ω—è—Ç—Å—è –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –Ω–µ –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤.'
  },
  {
    question: '–ú–æ–∂–Ω–æ –ª–∏ —Ä–∞–∑–æ–≥—Ä–µ—Ç—å –µ–¥—É?',
    answer: '–í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–∞—Ö –µ—Å—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞. –¢–∞–∫–∂–µ –≤—Å–µ –±–ª—é–¥–∞ –≤–∫—É—Å–Ω—ã –∏ –≤ —Ö–æ–ª–æ–¥–Ω–æ–º –≤–∏–¥–µ.'
  },
  {
    question: '–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã?',
    answer: '–ü—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç—ã (Visa, Mastercard, –ú–ò–†), Apple Pay, Google Pay, –°–ë–ü. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ–Ω–ª–∞–π–Ω –Ω–∞ —Å–∞–π—Ç–µ.'
  }
];

function Index() {
  const [activeSection, setActiveSection] = useState('home');
  const [selectedMachine, setSelectedMachine] = useState<number | null>(null);
  const [cart, setCart] = useState<MenuItem[]>([]);
  const [orderDialogOpen, setOrderDialogOpen] = useState(false);

  const addToCart = (item: MenuItem) => {
    setCart([...cart, item]);
    setOrderDialogOpen(true);
  };

  const getTotalPrice = () => {
    return cart.reduce((sum, item) => sum + item.price, 0);
  };

  const completeOrder = () => {
    if (!selectedMachine) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞');
      return;
    }
    alert(`–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ü–æ–ª—É—á–∏—Ç–µ –µ–≥–æ –≤ –∞–≤—Ç–æ–º–∞—Ç–µ: ${vendingMachines.find(m => m.id === selectedMachine)?.address}\n–ö–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è: ${Math.floor(1000 + Math.random() * 9000)}`);
    setCart([]);
    setOrderDialogOpen(false);
  };

  return (
    <div className="min-h-screen bg-background">
      <header className="sticky top-0 z-50 bg-white/95 backdrop-blur-sm border-b border-border shadow-sm">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-2">
              <div className="w-10 h-10 bg-primary rounded-full flex items-center justify-center">
                <span className="text-2xl">üç±</span>
              </div>
              <h1 className="text-2xl font-bold text-foreground">–î–æ–º–æ–ï–¥–∞</h1>
            </div>
            <nav className="hidden md:flex gap-6">
              {['home', 'menu', 'machines', 'faq', 'payment'].map((section) => (
                <button
                  key={section}
                  onClick={() => setActiveSection(section)}
                  className={`font-medium transition-colors hover:text-primary ${
                    activeSection === section ? 'text-primary' : 'text-muted-foreground'
                  }`}
                >
                  {section === 'home' && '–ì–ª–∞–≤–Ω–∞—è'}
                  {section === 'menu' && '–ú–µ–Ω—é'}
                  {section === 'machines' && '–ê–≤—Ç–æ–º–∞—Ç—ã'}
                  {section === 'faq' && 'FAQ'}
                  {section === 'payment' && '–û–ø–ª–∞—Ç–∞'}
                </button>
              ))}
            </nav>
            <Dialog open={orderDialogOpen} onOpenChange={setOrderDialogOpen}>
              <DialogTrigger asChild>
                <Button className="relative">
                  <Icon name="ShoppingCart" size={20} />
                  {cart.length > 0 && (
                    <Badge className="absolute -top-2 -right-2 h-5 w-5 rounded-full p-0 flex items-center justify-center">
                      {cart.length}
                    </Badge>
                  )}
                </Button>
              </DialogTrigger>
              <DialogContent>
                <DialogHeader>
                  <DialogTitle>–í–∞—à –∑–∞–∫–∞–∑</DialogTitle>
                </DialogHeader>
                {cart.length === 0 ? (
                  <p className="text-muted-foreground py-8 text-center">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                ) : (
                  <div className="space-y-4">
                    {cart.map((item, index) => (
                      <div key={index} className="flex justify-between items-center">
                        <span>{item.name}</span>
                        <span className="font-semibold">{item.price} ‚ÇΩ</span>
                      </div>
                    ))}
                    <div className="border-t pt-4">
                      <div className="flex justify-between items-center mb-4">
                        <span className="font-bold text-lg">–ò—Ç–æ–≥–æ:</span>
                        <span className="font-bold text-lg text-primary">{getTotalPrice()} ‚ÇΩ</span>
                      </div>
                      <Select onValueChange={(value) => setSelectedMachine(Number(value))}>
                        <SelectTrigger>
                          <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç" />
                        </SelectTrigger>
                        <SelectContent>
                          {vendingMachines.map((machine) => (
                            <SelectItem key={machine.id} value={machine.id.toString()}>
                              {machine.address}
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                      <Button onClick={completeOrder} className="w-full mt-4">
                        –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                      </Button>
                    </div>
                  </div>
                )}
              </DialogContent>
            </Dialog>
          </div>
        </div>
      </header>

      <main>
        {activeSection === 'home' && (
          <section className="py-20 px-4">
            <div className="container mx-auto">
              <div className="max-w-4xl mx-auto text-center space-y-6 animate-fade-in">
                <h2 className="text-5xl md:text-6xl font-bold text-foreground leading-tight">
                  –î–æ–º–∞—à–Ω—è—è –µ–¥–∞<br />–∏–∑ —É–º–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞
                </h2>
                <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
                  –°–≤–µ–∂–∏–µ –±–ª—é–¥–∞, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ —Å –ª—é–±–æ–≤—å—é –Ω–∞ –¥–æ–º–∞—à–Ω–µ–π –∫—É—Ö–Ω–µ. –ü–æ–ª—É—á–∏—Ç–µ –ª—é–±–∏–º—É—é –µ–¥—É –≤ —É–¥–æ–±–Ω–æ–º –∞–≤—Ç–æ–º–∞—Ç–µ 24/7.
                </p>
                <div className="flex gap-4 justify-center pt-4">
                  <Button size="lg" onClick={() => setActiveSection('menu')} className="text-lg">
                    –°–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é
                  </Button>
                  <Button size="lg" variant="outline" onClick={() => setActiveSection('machines')} className="text-lg">
                    –ù–∞–π—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç
                  </Button>
                </div>
              </div>

              <div className="grid md:grid-cols-3 gap-8 mt-20">
                {[
                  { icon: 'Chef', title: '–î–æ–º–∞—à–Ω—è—è –∫—É—Ö–Ω—è', desc: '–ì–æ—Ç–æ–≤–∏–º –∫–∞–∫ –¥–æ–º–∞, —Å –ª—é–±–æ–≤—å—é' },
                  { icon: 'Clock', title: '24/7 –¥–æ—Å—Ç—É–ø', desc: '–ï–¥–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫' },
                  { icon: 'Sparkles', title: '–í—Å–µ–≥–¥–∞ —Å–≤–µ–∂–µ–µ', desc: '–ù–æ–≤—ã–µ –±–ª—é–¥–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å' }
                ].map((feature, index) => (
                  <Card key={index} className="border-2 hover:border-primary transition-all hover:shadow-lg">
                    <CardContent className="pt-8 pb-8 text-center space-y-4">
                      <div className="w-16 h-16 bg-accent rounded-full flex items-center justify-center mx-auto">
                        <Icon name={feature.icon as any} size={32} className="text-primary" />
                      </div>
                      <h3 className="text-xl font-semibold">{feature.title}</h3>
                      <p className="text-muted-foreground">{feature.desc}</p>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </section>
        )}

        {activeSection === 'menu' && (
          <section className="py-16 px-4">
            <div className="container mx-auto">
              <h2 className="text-4xl font-bold text-center mb-12">–ù–∞—à–µ –º–µ–Ω—é</h2>
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                {menuItems.map((item) => (
                  <Card key={item.id} className="overflow-hidden hover:shadow-xl transition-all group">
                    <div className="relative h-64 overflow-hidden">
                      <img
                        src={item.image}
                        alt={item.name}
                        className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
                      />
                      <Badge className="absolute top-4 right-4 bg-white/90 text-foreground">
                        <Icon name="Flame" size={14} className="mr-1" />
                        {item.calories} –∫–∫–∞–ª
                      </Badge>
                    </div>
                    <CardContent className="p-6 space-y-4">
                      <div>
                        <h3 className="text-xl font-semibold mb-2">{item.name}</h3>
                        <p className="text-muted-foreground text-sm">{item.description}</p>
                      </div>
                      <div className="flex items-center justify-between pt-2">
                        <span className="text-2xl font-bold text-primary">{item.price} ‚ÇΩ</span>
                        <Button onClick={() => addToCart(item)}>
                          <Icon name="Plus" size={18} className="mr-1" />
                          –í –∫–æ—Ä–∑–∏–Ω—É
                        </Button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </section>
        )}

        {activeSection === 'machines' && (
          <section className="py-16 px-4">
            <div className="container mx-auto max-w-4xl">
              <h2 className="text-4xl font-bold text-center mb-12">–ù–∞—à–∏ –∞–≤—Ç–æ–º–∞—Ç—ã</h2>
              <div className="space-y-4">
                {vendingMachines.map((machine) => (
                  <Card key={machine.id} className="hover:shadow-lg transition-all">
                    <CardContent className="p-6">
                      <div className="flex items-start justify-between">
                        <div className="space-y-2">
                          <div className="flex items-center gap-2">
                            <Icon name="MapPin" size={20} className="text-primary" />
                            <h3 className="text-xl font-semibold">{machine.address}</h3>
                          </div>
                          <div className="flex items-center gap-2 text-muted-foreground">
                            <Icon name="Clock" size={18} />
                            <span>{machine.hours}</span>
                          </div>
                        </div>
                        <Button variant="outline">
                          <Icon name="Navigation" size={18} className="mr-2" />
                          –ú–∞—Ä—à—Ä—É—Ç
                        </Button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </section>
        )}

        {activeSection === 'faq' && (
          <section className="py-16 px-4">
            <div className="container mx-auto max-w-3xl">
              <h2 className="text-4xl font-bold text-center mb-12">–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
              <Accordion type="single" collapsible className="space-y-4">
                {faqItems.map((item, index) => (
                  <AccordionItem key={index} value={`item-${index}`} className="border rounded-lg px-6">
                    <AccordionTrigger className="text-lg font-semibold hover:text-primary">
                      {item.question}
                    </AccordionTrigger>
                    <AccordionContent className="text-muted-foreground">
                      {item.answer}
                    </AccordionContent>
                  </AccordionItem>
                ))}
              </Accordion>
            </div>
          </section>
        )}

        {activeSection === 'payment' && (
          <section className="py-16 px-4">
            <div className="container mx-auto max-w-4xl">
              <h2 className="text-4xl font-bold text-center mb-12">–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã</h2>
              <div className="grid md:grid-cols-2 gap-8">
                {[
                  { icon: 'CreditCard', title: '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã', desc: 'Visa, Mastercard, –ú–ò–†' },
                  { icon: 'Smartphone', title: 'Apple Pay / Google Pay', desc: '–ë—ã—Å—Ç—Ä–∞—è –æ–ø–ª–∞—Ç–∞ —Å–æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞' },
                  { icon: 'Wallet', title: '–°–ë–ü', desc: '–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π' },
                  { icon: 'Shield', title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', desc: '–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ SSL' }
                ].map((method, index) => (
                  <Card key={index}>
                    <CardContent className="p-8 flex items-start gap-4">
                      <div className="w-12 h-12 bg-accent rounded-full flex items-center justify-center flex-shrink-0">
                        <Icon name={method.icon as any} size={24} className="text-primary" />
                      </div>
                      <div>
                        <h3 className="text-xl font-semibold mb-2">{method.title}</h3>
                        <p className="text-muted-foreground">{method.desc}</p>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </section>
        )}
      </main>

      <footer className="bg-muted py-12 mt-20">
        <div className="container mx-auto px-4">
          <div className="grid md:grid-cols-3 gap-8 text-center md:text-left">
            <div>
              <h3 className="font-semibold text-lg mb-4">–î–æ–º–æ–ï–¥–∞</h3>
              <p className="text-muted-foreground text-sm">–î–æ–º–∞—à–Ω—è—è –µ–¥–∞ –∏–∑ —É–º–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞</p>
            </div>
            <div>
              <h3 className="font-semibold text-lg mb-4">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
              <div className="space-y-2 text-sm text-muted-foreground">
                <p>Email: info@domofood.ru</p>
                <p>–¢–µ–ª: +7 (495) 123-45-67</p>
              </div>
            </div>
            <div>
              <h3 className="font-semibold text-lg mb-4">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</h3>
              <p className="text-sm text-muted-foreground">–ê–≤—Ç–æ–º–∞—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ</p>
            </div>
          </div>
          <div className="border-t border-border mt-8 pt-8 text-center text-sm text-muted-foreground">
            ¬© 2025 –î–æ–º–æ–ï–¥–∞. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
          </div>
        </div>
      </footer>
    </div>
  );
}

export default Index;